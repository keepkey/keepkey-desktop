diff --git a/dist/ethereum.js b/dist/ethereum.js
index bdfb2fbb120e3488ebcc0f29c72a99215f549fcf..1f267f467831b34f5d5bc7d9d6903435a08f1521 100644
--- a/dist/ethereum.js
+++ b/dist/ethereum.js
@@ -216,7 +216,7 @@ function ethSignMessage(transport, msg) {
 }
 exports.ethSignMessage = ethSignMessage;
 function ethSignTypedData(transport, msg) {
-    return __awaiter(this, void 0, void 0, function* () {
+   return transport.lockDuring(() => __awaiter(this, void 0, void 0, function* () {
         /**
          * If the message to be signed is sufficiently small, the KeepKey can calculate the
          * domain separator and message hashes. Otherwise, we need to pre-calculate hashes
@@ -281,7 +281,7 @@ function ethSignTypedData(transport, msg) {
             console.error({ error });
             throw new Error("Failed to sign typed ETH message");
         }
-    });
+    }));
 }
 exports.ethSignTypedData = ethSignTypedData;
 function ethVerifyMessage(transport, msg) {
diff --git a/dist/transport.js b/dist/transport.js
index 7aeb7af77d31d9d9b3d15386ea02eed672fa496a..0c8373367ec87a0391101de18db06e14bb5fbbb2 100644
--- a/dist/transport.js
+++ b/dist/transport.js
@@ -1,14 +1,14 @@
 "use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
+var __createBinding = (this && this.__createBinding) || (Object.create ? (function (o, m, k, k2) {
     if (k2 === undefined) k2 = k;
-    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
-}) : (function(o, m, k, k2) {
+    Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
+}) : (function (o, m, k, k2) {
     if (k2 === undefined) k2 = k;
     o[k2] = m[k];
 }));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
+var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function (o, v) {
     Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
+}) : function (o, v) {
     o["default"] = v;
 });
 var __importStar = (this && this.__importStar) || function (mod) {
@@ -275,6 +275,14 @@ class Transport extends core.Transport {
                 if (response.message_enum === Messages.MessageType.MESSAGETYPE_FAILURE &&
                     response.message.code === Types.FailureType.FAILURE_ACTIONCANCELLED) {
                     this.callInProgress = { main: undefined, debug: undefined };
+                    if (response.message.message === 'PINs do not match') {
+                        response.message.code = Types.FailureType.FAILURE_PINMISMATCH;
+                        throw response;
+                    } else {
+                        throw new core.ActionCancelled();
+                    }
+                } else if (response.message_enum === Messages.MessageType.MESSAGETYPE_FAILURE &&
+                    response.message.code === Types.FailureType.FAILURE_PINCANCELLED) {
                     throw new core.ActionCancelled();
                 }
                 if (response.message_type === core.Events.FAILURE)
@@ -306,9 +314,7 @@ class Transport extends core.Transport {
             try {
                 this.callInProgress = { main: undefined, debug: undefined };
                 const cancelMsg = new Messages.Cancel();
-                yield this.call(Messages.MessageType.MESSAGETYPE_CANCEL, cancelMsg, {
-                    noWait: this.userActionRequired,
-                });
+                yield this.call(Messages.MessageType.MESSAGETYPE_CANCEL, cancelMsg);
             }
             catch (e) {
                 console.error("Cancel Pending Error", e);
