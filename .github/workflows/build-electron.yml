name: Build & Release Electron App

on:
  push:
    branches:
      - master
      - release-candidate
      - release-candidate-*
      - feature-*
  workflow_dispatch:

jobs:
  release-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Restore Cached Electron Bundles
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/electron
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}

      - name: Yarn Install
        run: yarn install

      - name: Yarn Build
        run: yarn build

      - name: Generate Checksum
        run: ./scripts/generate_checksum_unix.sh
        shell: bash

      - name: Upload Checksum
        uses: actions/upload-artifact@v3
        with:
          name: checksum-linux
          path: checksum.txt
          if-no-files-found: error

      - name: Build Electron App
        run: yarn run release
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.github_token }}

      - name: Upload .AppImage
        uses: actions/upload-artifact@v3
        with:
          name: linux-AppImage
          path: |
            packages/keepkey-desktop/dist/*.AppImage
            packages/keepkey-desktop/dist/*.AppImage.blockmap
          if-no-files-found: error

  release-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Restore Cached Electron Bundles
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: ~/AppData/Local/electron/Cache
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}

      - name: Yarn Install
        run: yarn install

      - name: Yarn Build
        run: yarn build

      - name: Generate Checksum
        run: ./scripts/generate_checksum_windows.sh

      - name: Upload Checksum
        uses: actions/upload-artifact@v3
        with:
          name: checksum-windows
          path: checksum.txt
          if-no-files-found: error

      - name: Build Electron App
        run: yarn run release
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.github_token }}

      - name: Upload .exe
        uses: actions/upload-artifact@v3
        with:
          name: windows-nsis
          path: |
            packages/keepkey-desktop/dist/*.exe
            packages/keepkey-desktop/dist/*.exe.blockmap
          if-no-files-found: error

  release-macos-x64:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Restore Cached Electron Bundles
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/electron
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}

      - name: Yarn Install
        run: yarn install

      - name: Yarn Build
        run: yarn build

      - name: Generate Checksum
        run: ./scripts/generate_checksum_unix.sh
        shell: bash

      - name: Upload Checksum
        uses: actions/upload-artifact@v3
        with:
          name: checksum-macos-x64
          path: checksum.txt
          if-no-files-found: error

      - name: Prepare For App Notarization
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
          chmod -R 755 ~/private_keys

      - name: Build Electron App (x64)
        run: yarn run release -- --x64
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.github_token }}
          CSC_LINK: ${{ secrets.mac_certs }}
          APPLE_API_KEY: ${{ secrets.apple_api_key }}
          APPLE_API_KEY_ID: ${{ secrets.apple_api_key_id }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.apple_app_specific_password }}
          APPLE_ID: ${{ secrets.apple_id }}
          APPLE_ID_PASSWORD: ${{ secrets.apple_id_password }}
          APPLE_TEAM_ID: ${{ secrets.apple_team_id }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}

      - name: Upload .dmg
        uses: actions/upload-artifact@v3
        with:
          name: mac-dmg-x64
          path: |
            packages/keepkey-desktop/dist/*.dmg
            packages/keepkey-desktop/dist/*.dmg.blockmap
            packages/keepkey-desktop/dist/*.zip
            packages/keepkey-desktop/dist/*.zip.blockmap
          if-no-files-found: error

  release-macos-arm64:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Restore Cached Electron Bundles
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/electron
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}

      - name: Yarn Install
        run: yarn install

      - name: Yarn Build
        run: yarn build

      - name: Generate Checksum
        run: ./scripts/generate_checksum_unix.sh
        shell: bash

      - name: Upload Checksum
        uses: actions/upload-artifact@v3
        with:
          name: checksum-macos-arm64
          path: checksum.txt
          if-no-files-found: error

      - name: Prepare For App Notarization
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
          chmod -R 755 ~/private_keys

      - name: Build Electron App (arm64)
        run: yarn run release -- --arm64
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.github_token }}
          CSC_LINK: ${{ secrets.mac_certs }}
          APPLE_API_KEY: ${{ secrets.apple_api_key }}
          APPLE_API_KEY_ID: ${{ secrets.apple_api_key_id }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.apple_app_specific_password }}
          APPLE_ID: ${{ secrets.apple_id }}
          APPLE_ID_PASSWORD: ${{ secrets.apple_id_password }}
          APPLE_TEAM_ID: ${{ secrets.apple_team_id }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}

      - name: Upload .dmg
        uses: actions/upload-artifact@v3
        with:
          name: mac-dmg-arm64
          path: |
            packages/keepkey-desktop/dist/*.dmg
            packages/keepkey-desktop/dist/*.dmg.blockmap
            packages/keepkey-desktop/dist/*.zip
            packages/keepkey-desktop/dist/*.zip.blockmap
          if-no-files-found: error
