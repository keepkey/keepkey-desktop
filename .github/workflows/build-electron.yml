name: Build & Release Electron App

on:
  push:
    branches:
      - master
      - release-candidate
      - release-candidate-*
      - feature-*
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
  
  ### Checkout

  - name: Checkout
    uses: nschloe/action-cached-lfs-checkout@v1
    with:
      submodules: true
  
  ### Setup Node

  - name: Setup Node
    uses: actions/setup-node@v3
    with:
      node-version-file: '.nvmrc'
  
  ### Restore Cached Electron Bundles

  - name: Restore Cached Electron Bundles
    uses: actions/cache@v3
    with:
      path: |
        ~/.cache/electron
        ~/Library/Caches/electron
        ~/AppData/Local/electron/Cache
      key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
  
  ### Install Dependencies

  - name: Install Dependencies
    run: yarn install
  
  ### Build and Release Electron App

  - name: Build and Release Electron App
    uses: samuelmeuli/action-electron-builder@v1
    with:
      github_token: ${{ secrets.github_token }}
      package_root: "packages/keepkey-desktop" # Specify if different
      release: ${{ startsWith(github.ref, 'refs/tags/v') }}
    env:
      NODE_ENV: production
      CSC_LINK: ${{ secrets.mac_certs }}
      CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}
      APPLE_ID: ${{ secrets.apple_id }}
      APPLE_ID_PASSWORD: ${{ secrets.apple_id_password }}
      APPLE_TEAM_ID: ${{ secrets.apple_team_id }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.apple_app_specific_password }}
      GH_TOKEN: ${{ secrets.github_token }}
