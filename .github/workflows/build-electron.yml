name: Build & Release Electron App

on:
  push:
    branches:
      - master
      - release-candidate
      - release-candidate-*
      - feature-*
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      # Existing Steps
      - name: Checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Restore Cached Electron Bundles
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/electron
            ~/Library/Caches/electron
            ~/AppData/Local/electron/Cache
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}

      - name: Yarn Install
        run: yarn install

      - name: Yarn Build
        run: yarn build

      - name: Upload Built App
        uses: actions/upload-artifact@v3
        with:
          name: app-build-dir-${{ runner.os }}
          path: packages/keepkey-desktop/build/
          if-no-files-found: error

      - name: Generate Checksum
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ./scripts/generate_checksum_windows.sh
          else
            ./scripts/generate_checksum_unix.sh
          fi
        shell: bash

      - name: Upload Checksum
        uses: actions/upload-artifact@v3
        with:
          name: checksum-${{ runner.os }}
          path: checksum.txt
          if-no-files-found: error

      - name: Mac - Prepare For App Notarization
        if: startsWith(matrix.os, 'macos')
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
          ls -al ~/private_keys # Debugging line to check the contents of the directory
          chmod -R 755 ~/private_keys # Ensure proper permissions

      - name: Linux - Build Electron App
        if: startsWith(matrix.os, 'ubuntu')
        run: yarn run release
        env:
          NODE_ENV: production
          APPLE_ID: ${{ secrets.apple_id }}
          APPLE_ID_PASSWORD: ${{ secrets.apple_id_password }}
          APPLE_TEAM_ID: ${{ secrets.apple_team_id }}
          GH_TOKEN: ${{ secrets.github_token }}

      - name: Mac - Build Electron App
        if: startsWith(matrix.os, 'macos')
        run: yarn run release
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.github_token }}
          CSC_LINK: ${{ secrets.mac_certs }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.apple_app_specific_password }}
          APPLE_ID: ${{ secrets.apple_id }}
          APPLE_ID_PASSWORD: ${{ secrets.apple_id_password }}
          APPLE_TEAM_ID: ${{ secrets.apple_team_id }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}

      - name: Windows - Build Electron App
        if: startsWith(matrix.os, 'windows')
        run: yarn run release
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.github_token }}

      - name: Linux - Upload .AppImage
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v3
        with:
          name: linux-AppImage
          path: |
            packages/keepkey-desktop/dist/*.AppImage
            packages/keepkey-desktop/dist/*.AppImage.blockmap
          if-no-files-found: error

      - name: Mac - Upload .dmg
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@v3
        with:
          name: mac-dmg
          path: |
            packages/keepkey-desktop/dist/*.dmg
            packages/keepkey-desktop/dist/*.dmg.blockmap
            packages/keepkey-desktop/dist/*.zip
            packages/keepkey-desktop/dist/*.zip.blockmap
          if-no-files-found: error

      - name: Windows - Upload .exe
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v3
        with:
          name: windows-nsis
          path: |
            packages/keepkey-desktop/dist/*.exe
            packages/keepkey-desktop/dist/*.exe.blockmap
          if-no-files-found: error
